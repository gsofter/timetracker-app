# scalar DateTime

type Schedule {
  id: String
  title: String
  allDay: Boolean
  start: DateTime
  end: DateTime
  desc: String
  userId: String
  resourceId: String
  tooltip: String
  isBillable: Boolean
  submittedOn: DateTime
  reason: String
  note: String
  approvedOn: DateTime
}

input ScheduleCreateRequest {
  title: String
  allDay: Boolean
  start: DateTime
  end: DateTime
  desc: String
  userId: String
  resourceId: String
  tooltip: String
  isBillable: Boolean
  submittedOn: DateTime
  reason: String
  note: String
  approvedOn: DateTime
}

extend type Query {
  getScheduleEvents(userId: String): [Schedule]
}

extend type Mutation {
  addScheduleEvent(request: ScheduleCreateRequest): Boolean
  updateScheduleEvent(eventId: String, request: ScheduleCreateRequest): Boolean
  removeScheduleEvent(eventId: String): Boolean
}
